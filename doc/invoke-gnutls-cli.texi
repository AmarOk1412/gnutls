@node gnutls-cli Invocation
@section Invoking gnutls-cli
@pindex gnutls-cli
@ignore
#  -*- buffer-read-only: t -*- vi: set ro:
# 
# DO NOT EDIT THIS FILE   (invoke-gnutls-cli.texi)
# 
# It has been AutoGen-ed  January 22, 2013 at 05:28:22 PM by AutoGen 5.15
# From the definitions    ../src/cli-args.def
# and the template file   agtexi-cmd.tpl
@end ignore


Simple client program to set up a TLS connection to some other computer. 
It sets up a TLS connection and forwards data from the standard input to the secured socket and vice versa.

This section was generated by @strong{AutoGen},
using the @code{agtexi-cmd} template and the option descriptions for the @code{gnutls-cli} program.
This software is released under the GNU General Public License, version 3 or later.


@anchor{gnutls-cli usage}
@subheading gnutls-cli usage (-h)

This is the automatically generated usage text for gnutls-cli:

@exampleindent 0
@example
gnutls-cli - GnuTLS client - Ver. @@VERSION@@
USAGE:  gnutls-cli [ -<flag> [<val>] | --<name>[@{=| @}<val>] ]... [hostname]

   -d, --debug=num            Enable debugging.
                                - It must be in the range:
                                  0 to 9999
   -V, --verbose              More verbose output
                                - may appear multiple times
       --tofu                 Enable trust on first use authentication
                                - disabled as --no-tofu
       --dane                 Enable DANE certificate verification (DNSSEC)
                                - disabled as --no-dane
       --local-dns            Use the local DNS server for DNSSEC resolving.
                                - disabled as --no-local-dns
       --ca-verification      Disable CA certificate verification
                                - disabled as --no-ca-verification
                                - enabled by default
       --ocsp                 Enable OCSP certificate verification
                                - disabled as --no-ocsp
   -r, --resume               Establish a session and resume
   -b, --heartbeat            Activate heartbeat support
   -e, --rehandshake          Establish a session and rehandshake
       --noticket             Don't accept session tickets
   -s, --starttls             Connect, establish a plain session and start TLS.
   -u, --udp                  Use DTLS (datagram TLS) over UDP
       --mtu=num              Set MTU for datagram TLS
                                - It must be in the range:
                                  0 to 17000
       --srtp-profiles=str    Offer SRTP profiles
       --crlf                 Send CR LF instead of LF
       --x509fmtder           Use DER format for certificates to read from
   -f, --fingerprint          Send the openpgp fingerprint, instead of the key
       --disable-extensions   Disable all the TLS extensions
       --print-cert           Print peer's certificate in PEM format
       --recordsize=num       The maximum record size to advertize
                                - It must be in the range:
                                  0 to 4096
       --dh-bits=num          The minimum number of bits allowed for DH
       --priority=str         Priorities string
       --x509cafile=str       Certificate file or PKCS #11 URL to use
       --x509crlfile=file     CRL file to use
                                - file must pre-exist
       --pgpkeyfile=file      PGP Key file to use
                                - file must pre-exist
       --pgpkeyring=file      PGP Key ring file to use
                                - file must pre-exist
       --pgpcertfile=file     PGP Public Key (certificate) file to use
                                - file must pre-exist
       --x509keyfile=str      X.509 key file or PKCS #11 URL to use
       --x509certfile=str     X.509 Certificate file or PKCS #11 URL to use
       --pgpsubkey=str        PGP subkey to use (hex or auto)
       --srpusername=str      SRP username to use
       --srppasswd=str        SRP password to use
       --pskusername=str      PSK username to use
       --pskkey=str           PSK key (in hex) to use
   -p, --port=str             The port or service to connect to
       --insecure             Don't abort program if server certificate can't be validated
       --ranges               When possible, use length-hiding padding to prevent traffic analysis
       --benchmark-ciphers    Benchmark individual ciphers
       --benchmark-soft-ciphers  Benchmark individual software ciphers (no hw acceleration)
       --benchmark-tls-kx     Benchmark TLS key exchange methods
       --benchmark-tls-ciphers  Benchmark TLS ciphers
   -l, --list                 Print a list of the supported algorithms and modes
   -v, --version[=arg]        Output version information and exit
   -h, --help                 Display extended usage information and exit
   -!, --more-help            Extended usage information passed thru pager

Options are specified by doubled hyphens and their name or by a single
hyphen and the flag character.
Operands and options may be intermixed.  They will be reordered.



Simple client program to set up a TLS connection to some other computer.
It sets up a TLS connection and forwards data from the standard input to
the secured socket and vice versa.

please send bug reports to:  bug-gnutls@@gnu.org
@end example
@exampleindent 4

@anchor{gnutls-cli benchmark-ciphers}
@subheading benchmark-ciphers option

This is the ``benchmark individual ciphers'' option.


@anchor{gnutls-cli benchmark-soft-ciphers}
@subheading benchmark-soft-ciphers option

This is the ``benchmark individual software ciphers (no hw acceleration)'' option.


@anchor{gnutls-cli benchmark-tls-ciphers}
@subheading benchmark-tls-ciphers option

This is the ``benchmark tls ciphers'' option.


@anchor{gnutls-cli benchmark-tls-kx}
@subheading benchmark-tls-kx option

This is the ``benchmark tls key exchange methods'' option.


@anchor{gnutls-cli ca-verification}
@subheading ca-verification option

This is the ``disable ca certificate verification'' option.

This option has some usage constraints.  It:
@itemize @bullet
@item
is enabled by default.
@end itemize

This option will disable CA certificate verification. It is to be used with the --dane or --tofu options.

@anchor{gnutls-cli crlf}
@subheading crlf option

This is the ``send cr lf instead of lf'' option.


@anchor{gnutls-cli dane}
@subheading dane option

This is the ``enable dane certificate verification (dnssec)'' option.
This option will, in addition to certificate authentication using 
the trusted CAs, verify the server certificates using on the DANE information
available via DNSSEC.

@anchor{gnutls-cli debug}
@subheading debug option (-d)

This is the ``enable debugging.'' option.
Specifies the debug level.

@anchor{gnutls-cli dh-bits}
@subheading dh-bits option

This is the ``the minimum number of bits allowed for dh'' option.
This option sets the minimum number of bits allowed for a Diffie-Hellman key exchange. You may want to lower the default value if the peer sends a weak prime and you get an connection error with unacceptable prime.

@anchor{gnutls-cli disable-extensions}
@subheading disable-extensions option

This is the ``disable all the tls extensions'' option.
This option disables all TLS extensions. Deprecated option. Use the priority string.

@anchor{gnutls-cli fingerprint}
@subheading fingerprint option (-f)

This is the ``send the openpgp fingerprint, instead of the key'' option.


@anchor{gnutls-cli heartbeat}
@subheading heartbeat option (-b)

This is the ``activate heartbeat support'' option.


@anchor{gnutls-cli insecure}
@subheading insecure option

This is the ``don't abort program if server certificate can't be validated'' option.


@anchor{gnutls-cli list}
@subheading list option (-l)

This is the ``print a list of the supported algorithms and modes'' option.
Print a list of the supported algorithms and modes. If a priority string is given then only the enabled ciphersuites are shown.

@anchor{gnutls-cli local-dns}
@subheading local-dns option

This is the ``use the local dns server for dnssec resolving.'' option.
This option will use the local DNS server for DNSSEC.
This is disabled by default due to many servers not allowing DNSSEC.

@anchor{gnutls-cli mtu}
@subheading mtu option

This is the ``set mtu for datagram tls'' option.


@anchor{gnutls-cli noticket}
@subheading noticket option

This is the ``don't accept session tickets'' option.


@anchor{gnutls-cli ocsp}
@subheading ocsp option

This is the ``enable ocsp certificate verification'' option.
This option will enable verification of the peer's certificate using ocsp

@anchor{gnutls-cli pgpcertfile}
@subheading pgpcertfile option

This is the ``pgp public key (certificate) file to use'' option.


@anchor{gnutls-cli pgpkeyfile}
@subheading pgpkeyfile option

This is the ``pgp key file to use'' option.


@anchor{gnutls-cli pgpkeyring}
@subheading pgpkeyring option

This is the ``pgp key ring file to use'' option.


@anchor{gnutls-cli pgpsubkey}
@subheading pgpsubkey option

This is the ``pgp subkey to use (hex or auto)'' option.


@anchor{gnutls-cli port}
@subheading port option (-p)

This is the ``the port or service to connect to'' option.


@anchor{gnutls-cli print-cert}
@subheading print-cert option

This is the ``print peer's certificate in pem format'' option.


@anchor{gnutls-cli priority}
@subheading priority option

This is the ``priorities string'' option.
TLS algorithms and protocols to enable. You can
use predefined sets of ciphersuites such as PERFORMANCE,
NORMAL, SECURE128, SECURE256.

Check  the  GnuTLS  manual  on  section  ``Priority strings'' for more
information on allowed keywords

@anchor{gnutls-cli pskkey}
@subheading pskkey option

This is the ``psk key (in hex) to use'' option.


@anchor{gnutls-cli pskusername}
@subheading pskusername option

This is the ``psk username to use'' option.


@anchor{gnutls-cli ranges}
@subheading ranges option

This is the ``when possible, use length-hiding padding to prevent traffic analysis'' option.


@anchor{gnutls-cli recordsize}
@subheading recordsize option

This is the ``the maximum record size to advertize'' option.


@anchor{gnutls-cli rehandshake}
@subheading rehandshake option (-e)

This is the ``establish a session and rehandshake'' option.
Connect, establish a session and rehandshake immediately.

@anchor{gnutls-cli resume}
@subheading resume option (-r)

This is the ``establish a session and resume'' option.
Connect, establish a session, reconnect and resume.

@anchor{gnutls-cli srppasswd}
@subheading srppasswd option

This is the ``srp password to use'' option.


@anchor{gnutls-cli srpusername}
@subheading srpusername option

This is the ``srp username to use'' option.


@anchor{gnutls-cli srtp-profiles}
@subheading srtp-profiles option

This is the ``offer srtp profiles'' option.


@anchor{gnutls-cli starttls}
@subheading starttls option (-s)

This is the ``connect, establish a plain session and start tls.'' option.
The TLS session will be initiated when EOF or a SIGALRM is received.

@anchor{gnutls-cli tofu}
@subheading tofu option

This is the ``enable trust on first use authentication'' option.
This option will, in addition to certificate authentication, perform authentication based on previously seen public keys, a model similar to SSH authentication.

@anchor{gnutls-cli udp}
@subheading udp option (-u)

This is the ``use dtls (datagram tls) over udp'' option.


@anchor{gnutls-cli verbose}
@subheading verbose option (-V)

This is the ``more verbose output'' option.

This option has some usage constraints.  It:
@itemize @bullet
@item
may appear an unlimited number of times.
@end itemize



@anchor{gnutls-cli x509cafile}
@subheading x509cafile option

This is the ``certificate file or pkcs #11 url to use'' option.


@anchor{gnutls-cli x509certfile}
@subheading x509certfile option

This is the ``x.509 certificate file or pkcs #11 url to use'' option.


@anchor{gnutls-cli x509crlfile}
@subheading x509crlfile option

This is the ``crl file to use'' option.


@anchor{gnutls-cli x509fmtder}
@subheading x509fmtder option

This is the ``use der format for certificates to read from'' option.


@anchor{gnutls-cli x509keyfile}
@subheading x509keyfile option

This is the ``x.509 key file or pkcs #11 url to use'' option.

@anchor{gnutls-cli exit status}
@subheading gnutls-cli exit status

One of the following exit values will be returned:
@table @samp
@item 0
Successful program execution.
@item 1
The operation failed or the command syntax was not valid.
@end table


@anchor{gnutls-cli See Also}
@subheading gnutls-cli See Also

gnutls-cli-debug(1), gnutls-serv(1)


@anchor{gnutls-cli Examples}
@subheading gnutls-cli Examples

@subheading Connecting using PSK authentication
To connect to a server using PSK authentication, you need to enable the choice of PSK by using a cipher priority parameter such as in the example below. 
@example
$ ./gnutls-cli -p 5556 localhost --pskusername psk_identity \
    --pskkey 88f3824b3e5659f52d00e959bacab954b6540344 \
    --priority NORMAL:-KX-ALL:+ECDHE-PSK:+DHE-PSK:+PSK
Resolving 'localhost'...
Connecting to '127.0.0.1:5556'...
- PSK authentication.
- Version: TLS1.1
- Key Exchange: PSK
- Cipher: AES-128-CBC
- MAC: SHA1
- Compression: NULL
- Handshake was completed
    
- Simple Client Mode:
@end example
By keeping the --pskusername parameter and removing the --pskkey parameter, it will query only for the password during the handshake. 

@subheading Listing ciphersuites in a priority string
To list the ciphersuites in a priority string:
@example
$ ./gnutls-cli --priority SECURE192 -l
Cipher suites for SECURE192
TLS_ECDHE_ECDSA_AES_256_CBC_SHA384         0xc0, 0x24	TLS1.2
TLS_ECDHE_ECDSA_AES_256_GCM_SHA384         0xc0, 0x2e	TLS1.2
TLS_ECDHE_RSA_AES_256_GCM_SHA384           0xc0, 0x30	TLS1.2
TLS_DHE_RSA_AES_256_CBC_SHA256             0x00, 0x6b	TLS1.2
TLS_DHE_DSS_AES_256_CBC_SHA256             0x00, 0x6a	TLS1.2
TLS_RSA_AES_256_CBC_SHA256                 0x00, 0x3d	TLS1.2

Certificate types: CTYPE-X.509
Protocols: VERS-TLS1.2, VERS-TLS1.1, VERS-TLS1.0, VERS-SSL3.0, VERS-DTLS1.0
Compression: COMP-NULL
Elliptic curves: CURVE-SECP384R1, CURVE-SECP521R1
PK-signatures: SIGN-RSA-SHA384, SIGN-ECDSA-SHA384, SIGN-RSA-SHA512, SIGN-ECDSA-SHA512
@end example

