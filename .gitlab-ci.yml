image: fedora:24

before_script:
  - dnf install -y git coreutils which autoconf libtool gettext-devel automake autogen nettle-devel p11-kit-devel autogen-libopts-devel trousers-devel guile-devel libtasn1-devel libidn-devel gawk gperf git2cl libtasn1-tools unbound-devel bison help2man xz net-tools
  - dnf install -y clang compiler-rt libseccomp-devel libasan libasan-static libubsan libubsan-static nodejs softhsm datefudge lcov openssl-devel dieharder mbedtls-utils openssl libcmocka-devel socat xz ppp abi-compliance-checker valgrind

Fedora/x86_64/minimal:
  script:
  - make autoreconf && ./configure --with-included-libtasn1
    --disable-doc --disable-dtls-srtp-support --disable-alpn-support --disable-rsa-export
    --disable-heartbeat-support --disable-srp-authentication --disable-psk-authentication
    --disable-anon-authentication --disable-dhe --disable-ecdhe --disable-openpgp-authentication
    --disable-ocsp --disable-session-tickets --disable-non-suiteb-curves
    --disable-nls --disable-crywrap --disable-libdane --without-p11-kit --without-tpm
    --disable-ssl3-support --disable-ssl2-support --without-zlib --disable-doc --disable-tests --enable-openssl-compatibility && make -j$(nproc)
  tags:
  - shared
  except:
  - tags

# Check with strict C99 and undefined sanitizer
Fedora/x86_64/ubsan:
  script:
  - make autoreconf && CFLAGS="-fsanitize=undefined -fno-sanitize-recover -g -std=c99
    -O2" LDFLAGS="-static-libubsan" ./configure --disable-doc --disable-valgrind-tests --disable-non-suiteb-curves --disable-guile --enable-code-coverage
    && make -j$(nproc) && make check -j$(nproc)
  - make local-code-coverage-output || true
  tags:
  - shared
  except:
  - tags
  artifacts:
    expire_in: 1 week
    when: on_failure
    paths:
      - tests/*.log
      - tests/*/*.log

Fedora/x86_64/no-SSL-3.0:
  script:
  - make autoreconf && mkdir -p build && cd build &&
    ../configure --disable-ssl3-support --disable-ssl2-support --disable-non-suiteb-curves --enable-seccomp-tests --disable-doc --disable-valgrind-tests --enable-code-coverage &&
    make -j$(nproc) && make check -j$(nproc)
  - make local-code-coverage-output || true
  tags:
  - shared
  except:
  - tags
  artifacts:
    expire_in: 1 week
    when: on_failure
    paths:
      - build/guile/tests/*.log
      - build/tests/*.log
      - build/tests/*/*.log

# Needs gnutls' headers due to some abi-checker issue with resolving deps
Fedora/x86_64/ABI-check:
  script:
  - dnf install -y binutils elfutils
  - make autoreconf && mkdir -p build && cd build &&
    ../configure --disable-doc --disable-cxx --disable-guile --disable-non-suiteb-curves && make -j$(nproc)
  - make abi-check
#check whether it contains position dependent code
  - make pic-check
  tags:
  - shared
  except:
  - tags
  artifacts:
    expire_in: 1 week
    when: on_failure
    paths:
      - build/logs/gnutls-dane/*/log.txt
      - build/logs/gnutls/*/log.txt

Fedora/x86_64/syntax-check:
  script:
  - make autoreconf && mkdir -p build && cd build &&
    ../configure --disable-doc --disable-cxx --disable-guile --disable-non-suiteb-curves && make syntax-check
  tags:
  - shared
  except:
  - tags

Fedora/dist:
  script:
  - git submodule update --init
  - yum install -y gtk-doc texinfo texinfo-tex texlive texlive-supertabular texlive-framed texlive-morefloats texlive-quotchap docbook5-style-xsl docbook-style-xsl ruby zip
  - make autoreconf && ./configure --disable-non-suiteb-curves --enable-gtk-doc --enable-fips140-mode
  - make -j$(nproc)
  - make -C doc gnutls.html 
  - PATH="$PATH:/usr/share/sgml/docbook/xsl-stylesheets-1.78.1/epub/bin/" make -C doc gnutls.epub
  - make -C doc/latex gnutls.pdf
  - make dist
  tags:
  - shared
  except:
  - tags

Fedora/x86_64/clang:
  script:
  - make autoreconf && 
    CC=clang ./configure --disable-non-suiteb-curves --enable-code-coverage --enable-seccomp-tests --disable-doc --disable-valgrind-tests &&
    make -j$(nproc) && make check -C tests -j$(nproc)
  - make local-code-coverage-output || true
  tags:
  - shared
  except:
  - tags
  artifacts:
    expire_in: 1 week
    when: on_failure
    paths:
      - guile/tests/*.log
      - tests/*.log
      - tests/*/*.log

Fedora/x86_64/FIPS140-2:
  script:
  - make autoreconf && mkdir -p build && cd build &&
    ../configure --disable-non-suiteb-curves --enable-fips140-mode --enable-code-coverage --disable-doc --disable-valgrind-tests &&
    make -j$(nproc) && make check -j$(nproc)
  - make local-code-coverage-output || true
  tags:
  - shared
  except:
  - tags
  artifacts:
    when: on_failure
    paths:
      - guile/tests/*.log
      - build/tests/*.log
      - build/tests/*/*.log

Fedora/x86_64/valgrind:
  script:
  - make autoreconf && rm -f tests/suite/mini-eagain2.c && ./configure
    --disable-non-suiteb-curves --enable-code-coverage --disable-doc && make -j$(nproc) && make check -j$(nproc)
  - make local-code-coverage-output || true
  tags:
  - shared
  except:
  - tags
  artifacts:
    expire_in: 1 week
    when: on_failure
    paths:
      - tests/*.log
      - tests/*/*.log

Fedora/x86_64/asan:
  script:
  - make autoreconf && CFLAGS="-fsanitize=address -g -O2" LDFLAGS="-static-libasan"
    ./configure --disable-doc --enable-code-coverage --disable-valgrind-tests --disable-non-suiteb-curves --disable-guile &&
    make -j$(nproc) && make check -j$(nproc)
  - make local-code-coverage-output || true
  tags:
  - shared
  except:
  - tags
  artifacts:
    expire_in: 1 week
    when: on_failure
    paths:
      - tests/*.log
      - tests/*/*.log

MinGW32/DLLs:
  script:
  - dnf install -y wine.i686 mingw32-p11-kit mingw32-nettle mingw32-libtasn1 mingw32-gcc mingw32-gmp mingw32-libidn util-linux
  - mount -t binfmt_misc binfmt_misc /proc/sys/fs/binfmt_misc
  - echo ':DOSWin:M::MZ::/usr/bin/wine:' > /proc/sys/fs/binfmt_misc/register
  - make autoreconf && rm -f tests/suite/mini-eagain2.c && 
    mingw32-configure --disable-nls --enable-local-libopts --disable-non-suiteb-curves --disable-doc --disable-valgrind-tests &&
    mingw32-make -j$(nproc) && mingw32-make -C tests check -j$(nproc)
# Combine generated apps and DLLs.
#libintl and iconv are a dependency of libidn
#libwinpthread is required by libgcc
#libffi is required by libp11-kit
  - mkdir -p win32-build/bin && mkdir -p win32-build/lib/includes &&
    cp lib/.libs/*.dll src/.libs/*.exe win32-build/bin &&
    i686-w64-mingw32-strip --strip-unneeded win32-build/bin/*.dll &&
    i686-w64-mingw32-strip win32-build/bin/*.exe &&
    cp /usr/i686-w64-mingw32/sys-root/mingw/bin/libtasn1-*.dll win32-build/bin &&
    cp /usr/i686-w64-mingw32/sys-root/mingw/bin/libp11-*.dll win32-build/bin &&
    cp /usr/i686-w64-mingw32/sys-root/mingw/bin/libnettle-*.dll win32-build/bin &&
    cp /usr/i686-w64-mingw32/sys-root/mingw/bin/libhogweed-*.dll win32-build/bin &&
    cp /usr/i686-w64-mingw32/sys-root/mingw/bin/libgmp-*.dll win32-build/bin &&
    cp /usr/i686-w64-mingw32/sys-root/mingw/bin/libgcc*.dll win32-build/bin &&
    cp /usr/i686-w64-mingw32/sys-root/mingw/bin/libwinpthread*.dll win32-build/bin &&
    cp /usr/i686-w64-mingw32/sys-root/mingw/bin/libidn-*.dll win32-build/bin &&
    cp /usr/i686-w64-mingw32/sys-root/mingw/bin/libintl-*.dll win32-build/bin &&
    cp /usr/i686-w64-mingw32/sys-root/mingw/bin/iconv*.dll win32-build/bin &&
    cp /usr/i686-w64-mingw32/sys-root/mingw/bin/libffi-*.dll win32-build/bin &&
    cp lib/.libs/*.a lib/*.def lib/gnutls.pc win32-build/lib &&
    cp lib/includes/gnutls/*.h win32-build/lib/includes
  tags:
  - shared
  only:
  - tags
  artifacts:
    paths:
      - win32-build/

MinGW64/DLLs:
  script:
  - dnf install -y wine mingw64-nettle mingw64-libtasn1 mingw64-p11-kit mingw64-gcc mingw64-gmp mingw64-libidn util-linux
  - mount -t binfmt_misc binfmt_misc /proc/sys/fs/binfmt_misc
  - echo ':DOSWin:M::MZ::/usr/bin/wine:' > /proc/sys/fs/binfmt_misc/register
  - make autoreconf && rm -f tests/suite/mini-eagain2.c && 
    mingw64-configure --disable-nls --enable-local-libopts --disable-non-suiteb-curves --disable-doc --disable-valgrind-tests &&
    mingw64-make -j$(nproc) && mingw64-make -C tests check -j$(nproc)
# Combine generated apps and DLLs.
#libintl and iconv are a dependency of libidn
#libwinpthread is required by libgcc
#libffi is required by libp11-kit
  - mkdir -p win64-build/bin && mkdir -p win64-build/lib/includes &&
    cp lib/.libs/*.dll src/.libs/*.exe win64-build/bin &&
    x86_64-w64-mingw32-strip --strip-unneeded win64-build/bin/*.dll &&
    x86_64-w64-mingw32-strip win64-build/bin/*.exe &&
    cp /usr/x86_64-w64-mingw32/sys-root/mingw/bin/libtasn1-*.dll win64-build/bin &&
    cp /usr/x86_64-w64-mingw32/sys-root/mingw/bin/libp11-*.dll win64-build/bin &&
    cp /usr/x86_64-w64-mingw32/sys-root/mingw/bin/libnettle-*.dll win64-build/bin &&
    cp /usr/x86_64-w64-mingw32/sys-root/mingw/bin/libhogweed-*.dll win64-build/bin &&
    cp /usr/x86_64-w64-mingw32/sys-root/mingw/bin/libgmp-*.dll win64-build/bin &&
    cp /usr/x86_64-w64-mingw32/sys-root/mingw/bin/libgcc*.dll win64-build/bin &&
    cp /usr/x86_64-w64-mingw32/sys-root/mingw/bin/libwinpthread*.dll win64-build/bin &&
    cp /usr/x86_64-w64-mingw32/sys-root/mingw/bin/libidn-*.dll win64-build/bin &&
    cp /usr/x86_64-w64-mingw32/sys-root/mingw/bin/libintl-*.dll win64-build/bin &&
    cp /usr/x86_64-w64-mingw32/sys-root/mingw/bin/iconv*.dll win64-build/bin &&
    cp /usr/x86_64-w64-mingw32/sys-root/mingw/bin/libffi-*.dll win64-build/bin &&
    cp lib/.libs/*.a lib/*.def lib/gnutls.pc win64-build/lib &&
    cp lib/includes/gnutls/*.h win64-build/lib/includes
  tags:
  - shared
  only:
  - tags
  artifacts:
    paths:
      - win64-build/

MinGW64:
  script:
  - dnf install -y wine mingw64-nettle mingw64-p11-kit mingw64-libtasn1 mingw64-gcc mingw64-gmp mingw64-libidn util-linux
  - dnf install -y "http://people.redhat.com/nmavrogi/fedora/mingw64-libcmocka-1.0.1-1.fc24.noarch.rpm"
  - mount -t binfmt_misc binfmt_misc /proc/sys/fs/binfmt_misc
  - echo ':DOSWin:M::MZ::/usr/bin/wine64:' > /proc/sys/fs/binfmt_misc/register
  - make autoreconf && rm -f tests/suite/mini-eagain2.c && mkdir -p build && cd build &&
    mingw64-configure --enable-local-libopts --without-p11-kit --disable-non-suiteb-curves --disable-doc --disable-valgrind-tests &&
    mingw64-make -j$(nproc) && mingw64-make -C tests check -j$(nproc)
  tags:
  - shared
  except:
  - tags
  artifacts:
    expire_in: 1 week
    when: on_failure
    paths:
      - build/*.log
      - build/tests/*.log
      - build/tests/*/*.log

MinGW32:
  script:
  - dnf install -y wine.i686 mingw32-p11-kit mingw32-nettle mingw32-libtasn1 mingw32-gcc mingw32-gmp mingw32-libidn util-linux
  - dnf install -y "http://people.redhat.com/nmavrogi/fedora/mingw32-libcmocka-1.0.1-1.fc24.noarch.rpm"
  - mount -t binfmt_misc binfmt_misc /proc/sys/fs/binfmt_misc
  - echo ':DOSWin:M::MZ::/usr/bin/wine:' > /proc/sys/fs/binfmt_misc/register
  - make autoreconf && rm -f tests/suite/mini-eagain2.c && mkdir -p build && cd build &&
    mingw32-configure --enable-local-libopts --without-p11-kit --disable-non-suiteb-curves --disable-doc --disable-valgrind-tests &&
    mingw32-make -j$(nproc) && mingw32-make -C tests check -j$(nproc)
  tags:
  - shared
  except:
  - tags
  artifacts:
    expire_in: 1 week
    when: on_failure
    paths:
      - build/*.log
      - build/tests/*.log
      - build/tests/*/*.log

# That is a specific runner that we cannot enable universally.
# We restrict it to builds under the gnutls/gnutls project.
FreeBSD10/x86_64:
  image:
  before_script:
  - /usr/bin/true
  script:
  - gmake autoreconf && rm -f tests/suite/mini-eagain2.c && LIBS="-L/usr/local/lib" ./configure
    --disable-guile --disable-doc --disable-valgrind-tests && gmake -j$(sysctl hw.ncpu | awk '{print $2}') && gmake check -j$(sysctl hw.ncpu | awk '{print $2}')
  tags:
  - freebsd
  only:
  - branches@gnutls/gnutls
  except:
  - tags
  artifacts:
    expire_in: 1 week
    when: on_failure
    paths:
      - tests/*.log
      - tests/*/*.log

# We need a clean 32-bit fedora for testing
Fedora/x86:
  image: nickcis/fedora-32:23
  before_script:
  - linux32 dnf install -y autoconf libtool gettext-devel automake autogen nettle-devel p11-kit-devel autogen-libopts-devel trousers-devel guile-devel libtasn1-devel libidn-devel gawk gperf git2cl libtasn1-tools unbound-devel bison help2man xz net-tools libseccomp-devel libubsan libubsan-static nodejs softhsm datefudge lcov openssl-devel dieharder mbedtls-utils openssl libcmocka-devel socat xz ppp abi-compliance-checker valgrind binutils elfutils
  script:
  - make autoreconf && mkdir -p build && cd build &&
    ../configure --build=i686-redhat-linux --target=i686-redhat-linux --disable-cxx --disable-non-suiteb-curves --enable-seccomp-tests --disable-doc --disable-valgrind-tests --enable-code-coverage &&
    make -j$(nproc)
  - make check -j$(nproc)
  - make pic-check
  - make local-code-coverage-output || true
  tags:
  - shared
  except:
  - tags
  artifacts:
    expire_in: 1 week
    when: on_failure
    paths:
      - build/*.log
      - build/tests/*.log
      - build/tests/*/*.log

Debian/x86_64:
  image: debian:stretch
  before_script:
  - apt-get update -qq -y
  - apt-get install -y git-core autoconf libtool gettext autopoint automake autogen nettle-dev libp11-kit-dev libtspi-dev guile-2.0-dev libtasn1-6-dev libidn11-dev gawk gperf git2cl libunbound-dev dns-root-data bison help2man valgrind libasan1 libubsan0 nodejs softhsm2 datefudge lcov libssl-dev libcmocka-dev dieharder openssl abi-compliance-checker socat net-tools ppp
  script:
  - make autoreconf && mkdir -p build && cd build &&
    ../configure --enable-code-coverage --disable-doc --disable-valgrind-tests
  - make -j$(nproc) && make check -j$(nproc)
  - make local-code-coverage-output || true
  tags:
  - shared
  except:
  - tags
  artifacts:
    when: on_failure
    paths:
      - guile/tests/*.log
      - build/tests/*.log
      - build/tests/*/*.log
